// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protobuf.proto

package protobuf

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SubidAllocReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Size                 uint64   `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubidAllocReq) Reset()         { *m = SubidAllocReq{} }
func (m *SubidAllocReq) String() string { return proto.CompactTextString(m) }
func (*SubidAllocReq) ProtoMessage()    {}
func (*SubidAllocReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_c77a803fcbc0c059, []int{0}
}

func (m *SubidAllocReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubidAllocReq.Unmarshal(m, b)
}
func (m *SubidAllocReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubidAllocReq.Marshal(b, m, deterministic)
}
func (m *SubidAllocReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubidAllocReq.Merge(m, src)
}
func (m *SubidAllocReq) XXX_Size() int {
	return xxx_messageInfo_SubidAllocReq.Size(m)
}
func (m *SubidAllocReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SubidAllocReq.DiscardUnknown(m)
}

var xxx_messageInfo_SubidAllocReq proto.InternalMessageInfo

func (m *SubidAllocReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SubidAllocReq) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

type SubidAllocResp struct {
	Uid                  uint32   `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Gid                  uint32   `protobuf:"varint,2,opt,name=gid,proto3" json:"gid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubidAllocResp) Reset()         { *m = SubidAllocResp{} }
func (m *SubidAllocResp) String() string { return proto.CompactTextString(m) }
func (*SubidAllocResp) ProtoMessage()    {}
func (*SubidAllocResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_c77a803fcbc0c059, []int{1}
}

func (m *SubidAllocResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubidAllocResp.Unmarshal(m, b)
}
func (m *SubidAllocResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubidAllocResp.Marshal(b, m, deterministic)
}
func (m *SubidAllocResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubidAllocResp.Merge(m, src)
}
func (m *SubidAllocResp) XXX_Size() int {
	return xxx_messageInfo_SubidAllocResp.Size(m)
}
func (m *SubidAllocResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SubidAllocResp.DiscardUnknown(m)
}

var xxx_messageInfo_SubidAllocResp proto.InternalMessageInfo

func (m *SubidAllocResp) GetUid() uint32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *SubidAllocResp) GetGid() uint32 {
	if m != nil {
		return m.Gid
	}
	return 0
}

type SubidFreeReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubidFreeReq) Reset()         { *m = SubidFreeReq{} }
func (m *SubidFreeReq) String() string { return proto.CompactTextString(m) }
func (*SubidFreeReq) ProtoMessage()    {}
func (*SubidFreeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_c77a803fcbc0c059, []int{2}
}

func (m *SubidFreeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubidFreeReq.Unmarshal(m, b)
}
func (m *SubidFreeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubidFreeReq.Marshal(b, m, deterministic)
}
func (m *SubidFreeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubidFreeReq.Merge(m, src)
}
func (m *SubidFreeReq) XXX_Size() int {
	return xxx_messageInfo_SubidFreeReq.Size(m)
}
func (m *SubidFreeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SubidFreeReq.DiscardUnknown(m)
}

var xxx_messageInfo_SubidFreeReq proto.InternalMessageInfo

func (m *SubidFreeReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type SubidFreeResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubidFreeResp) Reset()         { *m = SubidFreeResp{} }
func (m *SubidFreeResp) String() string { return proto.CompactTextString(m) }
func (*SubidFreeResp) ProtoMessage()    {}
func (*SubidFreeResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_c77a803fcbc0c059, []int{3}
}

func (m *SubidFreeResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubidFreeResp.Unmarshal(m, b)
}
func (m *SubidFreeResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubidFreeResp.Marshal(b, m, deterministic)
}
func (m *SubidFreeResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubidFreeResp.Merge(m, src)
}
func (m *SubidFreeResp) XXX_Size() int {
	return xxx_messageInfo_SubidFreeResp.Size(m)
}
func (m *SubidFreeResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SubidFreeResp.DiscardUnknown(m)
}

var xxx_messageInfo_SubidFreeResp proto.InternalMessageInfo

func init() {
	proto.RegisterType((*SubidAllocReq)(nil), "protobuf.SubidAllocReq")
	proto.RegisterType((*SubidAllocResp)(nil), "protobuf.SubidAllocResp")
	proto.RegisterType((*SubidFreeReq)(nil), "protobuf.SubidFreeReq")
	proto.RegisterType((*SubidFreeResp)(nil), "protobuf.SubidFreeResp")
}

func init() { proto.RegisterFile("protobuf.proto", fileDescriptor_c77a803fcbc0c059) }

var fileDescriptor_c77a803fcbc0c059 = []byte{
	// 236 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x4f, 0x2a, 0x4d, 0xd3, 0x03, 0x33, 0x84, 0x38, 0x60, 0x7c, 0x25, 0x63, 0x2e, 0xde, 0xe0,
	0xd2, 0xa4, 0xcc, 0x14, 0xc7, 0x9c, 0x9c, 0xfc, 0xe4, 0xa0, 0xd4, 0x42, 0x21, 0x3e, 0x2e, 0x26,
	0xcf, 0x14, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x26, 0xcf, 0x14, 0x21, 0x21, 0x2e, 0x96,
	0xe2, 0xcc, 0xaa, 0x54, 0x09, 0x26, 0x05, 0x46, 0x0d, 0x96, 0x20, 0x30, 0x5b, 0xc9, 0x84, 0x8b,
	0x0f, 0x59, 0x53, 0x71, 0x81, 0x90, 0x00, 0x17, 0x73, 0x69, 0x26, 0x44, 0x1b, 0x6f, 0x10, 0x88,
	0x09, 0x12, 0x49, 0xcf, 0x4c, 0x01, 0x6b, 0xe3, 0x0d, 0x02, 0x31, 0x95, 0xe4, 0xb8, 0x78, 0xc0,
	0xba, 0xdc, 0x8a, 0x52, 0x53, 0xb1, 0xd8, 0xa4, 0xc4, 0x0f, 0x75, 0x0a, 0x44, 0xbe, 0xb8, 0xc0,
	0x68, 0x0e, 0x23, 0x97, 0x78, 0x71, 0x65, 0x71, 0x59, 0x66, 0x71, 0x7e, 0x91, 0x6f, 0x7a, 0x51,
	0x70, 0x49, 0x62, 0x49, 0xaa, 0x73, 0x46, 0x62, 0x5e, 0x5e, 0x6a, 0x8e, 0x90, 0x23, 0x17, 0x17,
	0xc2, 0x09, 0x42, 0xe2, 0x7a, 0x70, 0x0f, 0xa2, 0xf8, 0x46, 0x4a, 0x02, 0xbb, 0x44, 0x71, 0x81,
	0x12, 0x83, 0x90, 0x1d, 0x17, 0x27, 0xdc, 0x3e, 0x21, 0x31, 0x34, 0x85, 0x50, 0x47, 0x4a, 0x89,
	0x63, 0x15, 0x07, 0xe9, 0x77, 0x52, 0xe7, 0x92, 0xcc, 0xcc, 0xd7, 0x4b, 0x2f, 0x2a, 0x48, 0xd6,
	0x83, 0xb9, 0x12, 0xae, 0xd8, 0x09, 0x1e, 0xc2, 0x01, 0x8c, 0x49, 0x6c, 0x60, 0xb6, 0x31, 0x20,
	0x00, 0x00, 0xff, 0xff, 0x2e, 0x74, 0x13, 0x2a, 0x86, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SysvisorMgrStateChannelClient is the client API for SysvisorMgrStateChannel service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SysvisorMgrStateChannelClient interface {
	// Generates a uid allocation request
	SubidAlloc(ctx context.Context, in *SubidAllocReq, opts ...grpc.CallOption) (*SubidAllocResp, error)
	// Generates a uid freeing request
	SubidFree(ctx context.Context, in *SubidFreeReq, opts ...grpc.CallOption) (*SubidFreeResp, error)
}

type sysvisorMgrStateChannelClient struct {
	cc *grpc.ClientConn
}

func NewSysvisorMgrStateChannelClient(cc *grpc.ClientConn) SysvisorMgrStateChannelClient {
	return &sysvisorMgrStateChannelClient{cc}
}

func (c *sysvisorMgrStateChannelClient) SubidAlloc(ctx context.Context, in *SubidAllocReq, opts ...grpc.CallOption) (*SubidAllocResp, error) {
	out := new(SubidAllocResp)
	err := c.cc.Invoke(ctx, "/protobuf.sysvisorMgrStateChannel/SubidAlloc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sysvisorMgrStateChannelClient) SubidFree(ctx context.Context, in *SubidFreeReq, opts ...grpc.CallOption) (*SubidFreeResp, error) {
	out := new(SubidFreeResp)
	err := c.cc.Invoke(ctx, "/protobuf.sysvisorMgrStateChannel/SubidFree", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SysvisorMgrStateChannelServer is the server API for SysvisorMgrStateChannel service.
type SysvisorMgrStateChannelServer interface {
	// Generates a uid allocation request
	SubidAlloc(context.Context, *SubidAllocReq) (*SubidAllocResp, error)
	// Generates a uid freeing request
	SubidFree(context.Context, *SubidFreeReq) (*SubidFreeResp, error)
}

func RegisterSysvisorMgrStateChannelServer(s *grpc.Server, srv SysvisorMgrStateChannelServer) {
	s.RegisterService(&_SysvisorMgrStateChannel_serviceDesc, srv)
}

func _SysvisorMgrStateChannel_SubidAlloc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubidAllocReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SysvisorMgrStateChannelServer).SubidAlloc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.sysvisorMgrStateChannel/SubidAlloc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SysvisorMgrStateChannelServer).SubidAlloc(ctx, req.(*SubidAllocReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SysvisorMgrStateChannel_SubidFree_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubidFreeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SysvisorMgrStateChannelServer).SubidFree(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.sysvisorMgrStateChannel/SubidFree",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SysvisorMgrStateChannelServer).SubidFree(ctx, req.(*SubidFreeReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _SysvisorMgrStateChannel_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protobuf.sysvisorMgrStateChannel",
	HandlerType: (*SysvisorMgrStateChannelServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SubidAlloc",
			Handler:    _SysvisorMgrStateChannel_SubidAlloc_Handler,
		},
		{
			MethodName: "SubidFree",
			Handler:    _SysvisorMgrStateChannel_SubidFree_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protobuf.proto",
}
